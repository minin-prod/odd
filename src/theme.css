body {
	margin: 0;
	padding: 0;
	height: 100vh;
	width: 100vw;
	font-family: Arimo;
	font-size: 0.9em;
}

* {
	-moz-user-select: none;
	-webkit-user-select: none;
	user-select: none;
}

@font-face {
	font-family: Arimo;
	src: url(./font/Arimo-Regular.woff);
}

@font-face {
	font-family: Arimo;
	src: url(./font/Arimo-Bold.woff);
	font-weight: bold;
}

@font-face {
	font-family: Arimo;
	src: url(./font/Arimo-Italic.woff);
	font-style: italic;
}

::-webkit-scrollbar-track {
	background: rgba(var(--accentRGBA), 0.2);
}

::-webkit-scrollbar {
	width: 0.4em;
}

::-webkit-scrollbar-thumb {
	background: var(--accent);
}

/* controls */

.control {
	display: block;
}

.control.flex { display: flex; }
.control.fw, .control.f { width: 100%; }
.control.fh, .control.f { height: 100%; }

.f1 { flex: 1; }

.control.list > *:not(.divider) {
	padding: 0.2em 0.5em;
	margin: 0.1em 0;
	background: rgba(var(--accentRGBA), 0);
	transition: background 0.1s;
	border-radius: 0;
}

.control.list > *:hover { background: rgba(var(--accentRGBA), 0.2); }
.control.list > *.focus { background: rgba(var(--accentRGBA), 0.2); }
.control.list.light > *:hover { background-color: rgba(255, 255, 255, 0.2); }
.control.list.light > *.focus { background-color: rgba(255, 255, 255, 0.2); }

.control.list.paralax > *:hover { background: rgba(var(--accentRGBA), 0.1); }
.control.list.paralax > *.focus { background: rgba(var(--accentRGBA), 0.2); }
.control.list.light.paralax > *:hover { background-color: rgba(255, 255, 255, 0.1); }
.control.list.light.paralax> *.focus { background-color: rgba(255, 255, 255, 0.2); }

.control.hlist {
	height: 100%;
}

.control.hlist > * {
	height: 100%;
	display: inline-flex;
	align-items: center;
	padding: 0 0.5em;
	background: rgba(var(--accentRGBA), 0);
	transition: background 0.1s;
	border-radius: 0;
}

.control.hlist > *:hover { background: rgba(var(--accentRGBA), 0.2); }
.control.hlist > *.focus { background: rgba(var(--accentRGBA), 0.2); }
.control.hlist.light > *:hover { background-color: rgba(255, 255, 255, 0.2); }
.control.hlist.light > *.focus { background-color: rgba(255, 255, 255, 0.2); }

.control.hlist.paralax > *:hover { background: rgba(var(--accentRGBA), 0.1); }
.control.hlist.paralax > *.focus { background: rgba(var(--accentRGBA), 0.2); }
.control.hlist.light.paralax > *:hover { background-color: rgba(255, 255, 255, 0.1); }
.control.hlist.light.paralax> *.focus { background-color: rgba(255, 255, 255, 0.2); }

.control.divider {
	width: calc(100% - 0.8em);
	height: 1px;
	margin: 0.2em 0.4em;
	background: var(--textColor);
	opacity: 0.5;
}

.control.splitter {
	width: 100%;
	height: 100%;
	display: flex;
}

.control.splitter-navbar { flex-direction: column; }

.control.splitter-navbar > *:nth-child(1) {
	flex: 0 0 1.8em;
	background: var(--accent);
	color: var(--textColor);
}

.control.splitter-navbar > *:nth-child(2) {
	flex: 1;
	overflow: auto;
}

.control.splitter-sidebar > *:nth-child(1) {
	height: 100%;
	overflow-y: scroll;
	flex: 0.3;
}

.control.splitter-sidebar > *:nth-child(2) {
	height: 100%;
	overflow-y: scroll;
	flex: 0.7;
}

.control.icongrid {
	padding: 1em;
	overflow-y: scroll;
	width: 100%;
	height: calc(100% - 2em) !important;
}

.control.icongrid-item {
	width: 4.2em;
	padding: 0.5em;
	display: inline-flex;
	align-items: center;
	flex-direction: column;
	transition: background 0.1s;
}

.control.icongrid-item:hover {
	background: rgba(var(--accentRGBA), 0.1);
}

.control.icongrid-item > *:nth-child(1) {
	width: 4em;
	height: 4em;
}

.control.icongrid-item > *:nth-child(2) {
	margin: 0;
	font-size: 0.8em;
	width: 100%;
	text-align: center;
	word-wrap: break-word;
}

.control.button {
	display: inline-block;
	transition: background 0.1s;
}

.button.button-small {
	width: 1.3em;
	height: 1.3em;
}

.control.panel.nav {
	display: flex;
	align-items: center;
}

.control.panel.nav > * {
	margin: 0 0.2em;
}

/* icons */

.icon-folder, .icon-up {
	background-position: center !important;
	background-size: cover !important;
}

.icon-folder { -webkit-mask: url("./img/explorer/folder.svg") center / contain no-repeat; mask: url("./img/explorer/folder.svg") center / contain no-repeat; background: var(--accent); }

.icon-file { -webkit-mask: url("./img/explorer/file.svg") center / contain no-repeat; mask: url("./img/explorer/file.svg") center / contain no-repeat; background: var(--accent); }

.icon-exe { -webkit-mask: url("./img/explorer/exe.png") center / contain no-repeat; mask: url("./img/explorer/exe.png") center / contain no-repeat; background: var(--accent); }

.icon-clock { -webkit-mask: url("./img/settings/time.svg") center / contain no-repeat; mask: url("./img/settings/time.svg") center / contain no-repeat; background: var(--accent); }

.icon-up { background: url("./img/up.png"); }

/* windows */

.window.minimized {
	display: none !important;
}

.window.maximized {
	width: 100% !important;
	height: 100% !important;
	top: 0 !important;
	left: 0 !important;
}

.window {
	position: absolute;
	width: 512px;
	height: 256px;
	min-width: 164px;
	min-height: 41px;
	background: #ddd;
	box-shadow: 0 0.1em 1em 0px rgba(0, 0, 0, 0.5);
	overflow: auto;
	resize: both;
}

.window .window-title {
	display: flex;
	align-items: center;
	width: calc(100% - 1em);
	height: 2em;
	padding: 0 0.5em;
	background: var(--accent);
	user-select: none;
}

.window .window-title-title {
	display: flex;
	flex: 1;
	color: var(--textColor);
	font-size: 1em;
}

.window .window-title-buttons {
	display: flex;
	justify-content: flex-end;
}

.window .window-title-buttons * {
	background-size: contain;
	transition: background-color 0.1s;
	height: 1.5em;
	width: 1.5em;
	background-color: rgba(255, 255, 255, 0);
}

.control.button:hover, .window .window-title-buttons *:hover {
	background-color: rgba(255, 255, 255, 0.2);
}

.window .window-title-buttons-close {
	background-image: url("./img/close.png");
}

.window .window-title-buttons-max {
	background-image: url("./img/maximize.png");
}

.window.maximized .window-title-buttons-max {
	background-image: url("./img/maximized.png");
}

.window .window-title-buttons-min {
	background-image: url("./img/minimize.png");
}

.window .window-content {
	width: 100%;
	height: calc(100% - 3em);
	overflow: auto;
}

/* explorer */

.app-2 .sidebar {
	background: rgba(var(--accentRGBA), 0.05);
}

.app-2 .sidebar > *:hover {
	background: rgba(var(--accentRGBA), 0.2);
	color: var(--textColor);
}

/* context menu */

.app-4 {
	width: 16vw;
	height: initial;
	max-height: 60vh;
	resize: none;
	background: transparent;
	box-shadow: none;
}

.app-4 .window-title {
	display: none;
}

.app-4 .window-content {
	width: initial;
	height: 100%;
	padding: 0.5em;
	background: rgba(var(--accentRGBA), 0.5);
	color: var(--textColor);
}

/* start memu */

.left .start {
	width: 30px;
	height: 30px;
	background-image: url("./img/start.png");
	background-color: rgba(255, 255, 255, 0);
	transition: background-color 0.1s;
}

.left .start:hover {
	background-color: rgba(255, 255, 255, 0.2);
}

.window.start {
	width: 16vw;
	height: initial;
	max-height: 60vh;
	top: 0 !important;
	left: 0 !important;
	resize: none;
	background: transparent;
	box-shadow: none;
}

.window.start .window-title {
	display: none;
}

.window.start .window-content {
	width: initial;
	height: 100%;
	padding: 1.25em 1em;
	background: rgba(var(--accentRGBA), 0.5);
	color: var(--textColor);
}

/* clock */

.time {
	height: calc(100% - 0.9em);
	padding: 0.45em;
	font-size: 0.8em;
	letter-spacing: 0.1em;
	text-align: center;
	background-color: rgba(255, 255, 255, 0);
	transition: background-color 0.1s;
}

.time:hover {
	background-color: rgba(255, 255, 255, 0.2);
}

/* navigation layer */

.nav nav {
	width: 100vw;
	height: 40px;
	display: flex;
	background: rgba(var(--accentRGBA), 0.5);
}

.nav nav * {
	margin: 0;
	color: var(--textColor);
}

.nav nav .section {
	height: 100%;
	padding: 0 1vw;
	display: flex;
	align-items: center;
}

.nav nav .left {
	padding-left: 0.5em;
	text-align: left;
	justify-content: left;
}

.nav nav .mid {
	padding: 0;
	text-align: left;
	flex: 1;
	justify-content: left;
	overflow-y: auto;
}

.nav nav .right {
	text-align: right;
	justify-content: right;
}

/* app layer */

.app {
	top: 40px;
	height: calc(100vh - 40px) !important;
}

/* wallpaper layer */

.wall {
	background: var(--wallpaper);
}

/* containers and layers */

.odd-container,
.layer {
	width: 100vw;
	height: 100vh;
	overflow: hidden;
	position: absolute;
}
